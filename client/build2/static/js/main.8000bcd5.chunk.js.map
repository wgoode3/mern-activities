{"version":3,"sources":["components/DashBoard.js","components/ActivityForm.js","components/EditActivity.js","components/ReviewActivity.js","App.js","serviceWorker.js","index.js"],"names":["DashBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","activities","data","rateThings","catch","err","console","log","toConsumableArray","state","i","reviews","length","sum","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","rating","return","avgRating","arr","key","j","temp","bubbleSort","react_default","a","createElement","map","activity","_id","type","duration","units","react_router_dom","to","Component","ActivityForm","changeType","e","objectSpread","target","changeDuration","changeUnits","create","preventDefault","post","errors","history","push","onSubmit","onChange","className","message","EditActivity","concat","match","params","update","put","delete","id","onClick","ReviewActivity","review","changeName","name","changeRating","changeDesc","description","index","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8000bcd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction bubbleSort(arr, key) {\n    for(let i=0; i<arr.length-1; i++){\n        for(let j=0; j<arr.length-1-i; j++){\n            if(arr[j][key] < arr[j+1][key]){\n                let temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\nclass DashBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activities: []\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(\"/activities\")\n            .then(res => {\n                this.setState({activities: res.data.activities}, () => {\n                    this.rateThings();\n                });\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    rateThings = () => {\n        let activities = [...this.state.activities];\n        for(let i in activities) {\n            if(activities[i].reviews.length > 0){\n                let sum = 0;\n                for(let review of activities[i].reviews) {\n                    sum += review.rating;\n                }\n                activities[i].avgRating = sum / activities[i].reviews.length;\n            } else {\n                activities[i].avgRating = 0;\n            }\n        }\n        activities = bubbleSort(activities, \"avgRating\");\n        this.setState({activities: activities});\n    }\n\n    render() {\n        return (\n            <fieldset>\n                <legend>Activities</legend>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Type</th>\n                            <th>Rating</th>\n                            <th>Duration</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.activities.map( activity => \n                                <tr key={activity._id}>\n                                    <td>{activity.type}</td>\n                                    <td>{activity.avgRating}</td>\n                                    <td>{activity.duration} {activity.units}</td>\n                                    <td>\n                                        <Link \n                                            to={\"/activity/\" + activity._id + \"/edit\"}>\n                                            <button>Edit</button>\n                                        </Link>\n                                        <Link \n                                            to={\"/activity/\" + activity._id + \"/review\"}>\n                                            <button>Review</button>\n                                        </Link>\n                                    </td>\n                                </tr>    \n                            )\n                        }\n                    </tbody>\n                </table>\n            </fieldset>\n        );\n    }\n}\n\nexport default DashBoard;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ActivityForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activity: {\n                type: \"\",\n                duration: \"\",\n                units: \"Years\"\n            },\n            errors: {}\n        }\n    }\n\n    changeType = (e) => {\n        this.setState({activity: {...this.state.activity, type: e.target.value}});\n    }\n\n    changeDuration = (e) => {\n        this.setState({activity: {...this.state.activity, duration: e.target.value}});\n    }\n\n    changeUnits = (e) => {\n        this.setState({activity: {...this.state.activity, units: e.target.value}});\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        axios.post(\"/activities\", this.state.activity)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                    console.log(this.state);\n                } else {\n                    this.props.history.push(\"/\");\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n    \n    render() {\n        return (\n            <fieldset>\n                <legend>Create Activity</legend>\n                <form onSubmit={this.create}>\n                    <p>\n                        Type:&nbsp;\n                        <input type=\"text\" onChange={this.changeType} />\n                        {\n                            (this.state.errors.type) ? \n                            <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Duration:&nbsp;\n                        <input type=\"number\" onChange={this.changeDuration} />\n                        {\n                            (this.state.errors.duration) ? \n                            <span>&nbsp;{this.state.errors.duration.message}</span> :\n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Units:&nbsp;\n                        <select onChange={this.changeUnits}>\n                            <option>Years</option>\n                            <option>Months</option>\n                            <option>Days</option>\n                            <option>Hours</option>\n                            <option>Minutes</option>\n                            <option>Seconds</option>\n                        </select>\n                    </p>\n                    <button type=\"submit\">Create Activity</button>\n                </form>\n            </fieldset>\n        );\n    }\n}\n\nexport default ActivityForm;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditActivity extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activity: {\n                type: \"\",\n                duration: \"\",\n                units: \"Years\"\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/activities/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({activity: res.data.activity});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    changeType = (e) => {\n        this.setState({activity: {...this.state.activity, type: e.target.value}});\n    }\n\n    changeDuration = (e) => {\n        this.setState({activity: {...this.state.activity, duration: e.target.value}});\n    }\n\n    changeUnits = (e) => {\n        this.setState({activity: {...this.state.activity, units: e.target.value}});\n    }\n\n    update = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        axios.put(`/activities/${this.props.match.params._id}`, this.state.activity)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    delete = (e) => {\n        axios.delete(`/activities/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <fieldset>\n                <legend>Edit Activity</legend>\n                <form onSubmit={this.update}>\n                    <p>\n                        Type:&nbsp;\n                        <input \n                            type=\"text\" \n                            onChange={this.changeType} \n                            value={this.state.activity.type} \n                        />\n                        {\n                            (this.state.errors.type) ? \n                            <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Duration:&nbsp;\n                        <input \n                            type=\"number\" \n                            onChange={this.changeDuration} \n                            value={this.state.activity.duration}\n                        />\n                        {\n                            (this.state.errors.duration) ? \n                            <span>&nbsp;{this.state.errors.duration.message}</span> :\n                            <span></span>\n                        }\n                    </p>\n                    <p>\n                        Units:&nbsp;\n                        <select id=\"select\" onChange={this.changeUnits} value={this.state.activity.units}>\n                            <option value=\"Years\">Years</option>\n                            <option value=\"Months\">Months</option>\n                            <option value=\"Days\">Days</option>\n                            <option value=\"Hours\">Hours</option>\n                            <option value=\"Minutes\">Minutes</option>\n                            <option value=\"Seconds\">Seconds</option>\n                        </select>\n                    </p>\n                    <button type=\"submit\">Update Activity</button>\n                </form>\n                <button onClick={this.delete}>Delete Activity</button>\n            </fieldset>\n        )\n    }\n}\n\nexport default EditActivity;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ReviewActivity extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activity: {\n                type: \"\",\n                duration: \"\",\n                units: \"Years\",\n                reviews: []\n            },\n            review : {\n                name: \"\",\n                rating: 3,\n                description: \"\"\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/activities/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({activity: res.data.activity});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    review = (e) => {\n        e.preventDefault();\n        axios.post(`/activities/${this.props.match.params._id}/review`, this.state.review)\n            .then(res => {\n                this.componentDidMount();\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    changeName = (e) => {\n        this.setState({review: {...this.state.review, name: e.target.value}});\n    }\n\n    changeRating = (e) => {\n        this.setState({review: {...this.state.review, rating: e.target.value}});\n    }\n\n    changeDesc = (e) => {\n        this.setState({review: {...this.state.review, description: e.target.value}});\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Activity: {this.state.activity.type}</h3>\n                <h4>Duration: {this.state.activity.duration} {this.state.activity.units}</h4>\n                <h4>Reviews:</h4>\n                <hr />\n\n                {\n                    this.state.activity.reviews.map( (review, index) => \n                        <div key={index}>\n                            <p>\n                                <strong>{review.name} says:</strong>&nbsp;\n                                {review.description}\n                            </p>\n                            <p>{review.rating}</p>\n                            <hr />\n                        </div>\n                    )\n                }\n\n                <fieldset>\n                    <legend>Review Activity</legend>\n                    <form onSubmit={this.review}>\n                        <p>\n                            Name:&nbsp;\n                            <input type=\"text\" onChange={this.changeName} />\n                        </p>\n                        <p>\n                            Rating:&nbsp;\n                            <input type=\"number\" onChange={this.changeRating} />\n                        </p>\n                        <p>\n                            Description:&nbsp;\n                            <input type=\"text\" onChange={this.changeDesc} />\n                        </p>\n                        <button type=\"submit\">Review Activity</button>\n                    </form>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\nexport default ReviewActivity;","import React, { Component } from 'react';\nimport './App.css';\nimport \"react-router\";\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\nimport DashBoard from './components/DashBoard';\nimport ActivityForm from './components/ActivityForm';\nimport EditActivity from './components/EditActivity';\nimport ReviewActivity from './components/ReviewActivity';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Welcome to Activity Reviews</h1>\n        <BrowserRouter>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/activity/new\">New Activity</Link></li>\n          </ul>\n          <Route exact path=\"/\" component={DashBoard} />\n          <Route path=\"/activity/new\" component={ActivityForm} />\n          <Route path=\"/activity/:_id/edit\" component={EditActivity} />\n          <Route path=\"/activity/:_id/review\" component={ReviewActivity} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}